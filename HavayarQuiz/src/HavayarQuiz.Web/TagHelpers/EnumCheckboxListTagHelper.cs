using Microsoft.AspNetCore.Mvc.Rendering;
using Microsoft.AspNetCore.Mvc.ViewFeatures;
using Microsoft.AspNetCore.Razor.TagHelpers;

namespace HavayarQuiz.Web.TagHelpers;

[HtmlTargetElement("checkboxlist")]
public class CheckBoxListTagHelper : TagHelper
{
    private readonly IHtmlGenerator _generator;
    private readonly IHtmlHelper _html;

    [HtmlAttributeName("asp-for")]
    public ModelExpression For { get; set; }

    public CheckBoxListTagHelper(IHtmlGenerator generator, IHtmlHelper html)
    {
        _generator = generator;
        _html = html;
    }

    public override async void Process(TagHelperContext context, TagHelperOutput output)
    {
        if (For == null)
            throw new InvalidOperationException("The 'asp-for' attribute must be specified.");
        var modelExplorer = For.ModelExplorer;
        var modelType = modelExplorer.ModelType;
        var isList = modelType.IsGenericType && modelType.GetGenericTypeDefinition() == typeof(List<>);
        if (!isList || !modelType.GetGenericArguments()[0].IsEnum)
            throw new InvalidOperationException("The 'asp-for' attribute must be of List<Enum> type.");

        output.TagName = "div";
        output.TagMode = TagMode.StartTagAndEndTag;
        var enumType = modelType.GetGenericArguments()[0];

        var items = _html.GetEnumSelectList(enumType);
        output.Content.Clear(); // Clear the content generated by the SelectTagHelper

        var counter = 0;
        foreach (var (item, div) in from item in items
                                    let div = new TagBuilder("div")
                                    select (item, div))
        {
            div.Attributes.Add("class", "form-check m-1");
            var checkboxItem = new TagBuilder("input");
            checkboxItem.Attributes.Add("type", "checkbox");
            checkboxItem.Attributes.Add("value", item.Value);
            checkboxItem.Attributes.Add("asp-for", $"{For.Name}[{++counter}]");
            //checkboxItem.Attributes.Add("name", $"{For.Name}[{++counter}]");
            //checkboxItem.Attributes.Add("id", $"{For.Name.Replace('.', '_')}_{counter}");
            if (modelExplorer.Model != null && ((List<Enum>)modelExplorer.Model).Contains(Enum.Parse(enumType, item.Value)))
                checkboxItem.Attributes.Add("checked", "checked");
            div.InnerHtml.AppendHtml(checkboxItem);
            var labelItem = new TagBuilder("label");
            labelItem.Attributes.Add("class", "mx-1");
            labelItem.InnerHtml.Append(item.Text);
            div.InnerHtml.AppendHtml(labelItem);
            output.Content.AppendHtml(div);
        }
    }
}
